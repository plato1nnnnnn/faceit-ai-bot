name: Deploy to reg.ru VPS (SSH-clone support)
on:
  workflow_dispatch:
  push:
  branches: [ main ]
jobs:
  deploy:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
  uses: actions/checkout@v4
  - name: Start SSH agent for VPS key
  uses: webfactory/ssh-agent@v0.8.1
  with:
          ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
  - name: Copy repo deploy key to server (optional)
  if: ${{ secrets.REPO_SSH_PRIVATE_KEY != '' }}
  env:
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_USER: ${{ secrets.VPS_USER }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT || '22' }}
  run: |
          echo "Transferring repo deploy key to server"
          # write the deploy key to a temp file locally
          mkdir -p /tmp/deploy
          cat > /tmp/deploy/repo_deploy_key <<'KEY'
${{ secrets.REPO_SSH_PRIVATE_KEY }}
KEY
          chmod 600 /tmp/deploy/repo_deploy_key
          scp -P ${SSH_PORT} /tmp/deploy/repo_deploy_key ${SSH_USER}@${SSH_HOST}:/tmp/repo_deploy_key
          # on the server, move key into ~/.ssh, configure an ssh config entry for github.com using this key
          ssh -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "bash -lc 'mkdir -p ~/.ssh && mv /tmp/repo_deploy_key ~/.ssh/repo_deploy_key && chmod 600 ~/.ssh/repo_deploy_key && grep -qxF 'Host github.com' ~/.ssh/config || echo -e "Host github.com\n  HostName github.com\n  IdentityFile ~/.ssh/repo_deploy_key\n  IdentitiesOnly yes" >> ~/.ssh/config && chmod 600 ~/.ssh/config'"
  - name: Deploy on server (clone/pull + docker compose)
  env:
          DEPLOY_PATH: ${{ secrets.VPS_DEPLOY_PATH || '/var/www/faceit-ai-bot' }}
          SSH_USER: ${{ secrets.VPS_USER }}
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT || '22' }}
          REPO_SSH: ${{ secrets.REPO_SSH || '' }}
  run: |
          set -euo pipefail
          echo "Deploying to ${SSH_USER}@${SSH_HOST}:${DEPLOY_PATH}"
          # If a repo deploy key was transferred to the server, use SSH clone on the server; otherwise use HTTPS
          ssh -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "bash -lc '
            set -e
            if [ -d "${DEPLOY_PATH}/.git" ]; then
              cd ${DEPLOY_PATH} && git pull
            else
              if [ -f ~/.ssh/repo_deploy_key ]; then
                git clone git@github.com:${{ github.repository }} ${DEPLOY_PATH}
              else
                git clone https://github.com/${{ github.repository }} ${DEPLOY_PATH}
              fi
            fi
            cd ${DEPLOY_PATH}
            docker compose pull || true
            docker compose up -d --build
          '"
name: Deploy to reg.ru VPS (SSH-clone support)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start SSH agent for VPS key
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

      - name: Copy repo deploy key to server (optional)
        if: ${{ secrets.REPO_SSH_PRIVATE_KEY != '' }}
        env:
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_USER: ${{ secrets.VPS_USER }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT || '22' }}
        run: |
          echo "Transferring repo deploy key to server"
          # write the deploy key to a temp file locally
          mkdir -p /tmp/deploy
          cat > /tmp/deploy/repo_deploy_key <<'KEY'
${{ secrets.REPO_SSH_PRIVATE_KEY }}
KEY
          chmod 600 /tmp/deploy/repo_deploy_key
          scp -P ${SSH_PORT} /tmp/deploy/repo_deploy_key ${SSH_USER}@${SSH_HOST}:/tmp/repo_deploy_key
          # on the server, move key into ~/.ssh, configure an ssh config entry for github.com using this key
          ssh -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "bash -lc 'mkdir -p ~/.ssh && mv /tmp/repo_deploy_key ~/.ssh/repo_deploy_key && chmod 600 ~/.ssh/repo_deploy_key && grep -qxF 'Host github.com' ~/.ssh/config || echo -e "Host github.com\n  HostName github.com\n  IdentityFile ~/.ssh/repo_deploy_key\n  IdentitiesOnly yes" >> ~/.ssh/config && chmod 600 ~/.ssh/config'"

      - name: Deploy on server (clone/pull + docker compose)
        env:
          DEPLOY_PATH: ${{ secrets.VPS_DEPLOY_PATH || '/var/www/faceit-ai-bot' }}
          SSH_USER: ${{ secrets.VPS_USER }}
          SSH_HOST: ${{ secrets.VPS_HOST }}
          SSH_PORT: ${{ secrets.VPS_SSH_PORT || '22' }}
          REPO_SSH: ${{ secrets.REPO_SSH || '' }}
        run: |
          set -euo pipefail
          echo "Deploying to ${SSH_USER}@${SSH_HOST}:${DEPLOY_PATH}"
          # If a repo deploy key was transferred to the server, use SSH clone on the server; otherwise use HTTPS
          ssh -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} "bash -lc '
            set -e
            if [ -d "${DEPLOY_PATH}/.git" ]; then
              cd ${DEPLOY_PATH} && git pull
            else
              if [ -f ~/.ssh/repo_deploy_key ]; then
                git clone git@github.com:${{ github.repository }} ${DEPLOY_PATH}
              else
                git clone https://github.com/${{ github.repository }} ${DEPLOY_PATH}
              fi
            fi
            cd ${DEPLOY_PATH}
            docker compose pull || true
            docker compose up -d --build
          '"
```
